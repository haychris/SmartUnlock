package hay.chris.smartunlock;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OptionalDataException;
import java.io.StreamCorruptedException;

import android.content.Context;
import android.content.SharedPreferences;
import android.util.Base64;
import android.util.Base64InputStream;
import android.util.Base64OutputStream;

public class ConditionObject {

	public ConditionObject() {
		// TODO Auto-generated constructor stub
	}

	public void saveThatCondition(Object object, Context context, String storageName) {
		SharedPreferences prefs = context.getSharedPreferences("hay.chris.smartunlock.condition_storage", 0);
	    SharedPreferences.Editor ed =prefs.edit();
	    ByteArrayOutputStream arrayOutputStream = new ByteArrayOutputStream();

	    ObjectOutputStream objectOutput;
	    try {
	        objectOutput = new ObjectOutputStream(arrayOutputStream);
	        objectOutput.writeObject(object);
	        byte[] data = arrayOutputStream.toByteArray();
	        objectOutput.close();
	        arrayOutputStream.close();

	        ByteArrayOutputStream out = new ByteArrayOutputStream();
	        Base64OutputStream b64 = new Base64OutputStream(out, Base64.DEFAULT);
	        b64.write(data);
	        b64.close();
	        out.close();

	        ed.putString(storageName, new String(out.toByteArray()));

	        ed.commit();
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	}
	public ConditionObject loadThatCondition(Context context, String storageName) {
		SharedPreferences prefs = context.getSharedPreferences("hay.chris.smartunlock.condition_storage", 0);
		byte[] bytes = prefs.getString(storageName, "{}").getBytes();
	    if (bytes.length == 0) {
	        return null;
	    }
	    ByteArrayInputStream byteArray = new ByteArrayInputStream(bytes);
	    Base64InputStream base64InputStream = new Base64InputStream(byteArray, Base64.DEFAULT);
	    ObjectInputStream in = null;
	    ConditionObject condition = null;
	    try {
	    	in = new ObjectInputStream(base64InputStream);
			condition = (ConditionObject) in.readObject();
			byteArray.close();
			base64InputStream.close();
		    in.close();
		} catch (OptionalDataException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (StreamCorruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    return condition;
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
